name: Release
on:
  push:
    tags: 'v*'

# Needed to create the release
permissions:
  contents: write
  id-token: write

# Needed to create the release and use gh cli
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
  GO_VERSION: "1.22.0"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Create a Release
          id: create_release
          uses: actions/create-release@v1
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref_name }}
            prerelease: true

  build-and-push-amd64:
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Dependencies
        run: |
          go mod download
          curl -sL https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz | tar xvzf - -C /usr/local/bin --strip-components=1

      - name: Build Binary
        run: |
          VERSION=$(git describe --tags --always)
          ARCH=$(go env GOHOSTARCH)
          SUFFIX="-${ARCH}"

          # Set linker flags
          LINKFLAGS="-X github.com/rancher/csp-adapter.Version=$VERSION"

          CGO_ENABLED=0 go build -ldflags "$LINKFLAGS -extldflags -static -s" -o bin/csp-adapter

          mkdir -p dist/artifacts
          cp bin/csp-adapter dist/artifacts/csp-adapter-linux${SUFFIX}
          
      - name: Run Tests
        run: |
          go test ./... -v

      - name: Package Helm Charts
        run: |
          VERSION=$(git describe --tags --always)
          HELM_VERSION=${VERSION/v/}

          mkdir -p build/charts
          cp -r charts build/

          sed -i -e "s/^version:.*/version: $HELM_VERSION/" \
                  -e "s/appVersion:.*/appVersion: $HELM_VERSION/" \
                  build/charts/rancher-csp-adapter/Chart.yaml

          sed -i -e "s/tag: latest/tag: $HELM_VERSION/" \
                  build/charts/rancher-csp-adapter/values.yaml

          helm package -d ./dist/artifacts ./build/charts/rancher-csp-adapter
          
      - name: Generate Checksum
        run: |
          cd dist/artifacts 
          sha256sum * > sha256sum-amd64.txt

      - name: Upload Assets
        run: |
          ASSETS_DIR="dist/artifacts"
          TAG=${{ github.ref_name }}
          for file in $ASSETS_DIR/*; do
            gh release upload $TAG $file --repo ${{ github.repository }}
          done

      - name: Build Manifest
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/rancher/rancher-csp-adapter
            709825985650.dkr.ecr.us-east-1.amazonaws.com/suse/rancher/rancher-csp-adapter
          flavor: |
            latest=false

      - name: Read Secrets
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD ;
            secret/data/github/repo/${{ github.repository }}/aws/aws-rancher-csp-adapter-ecr/credentials accessKeyId | ECR_ACCESS_KEY ;
            secret/data/github/repo/${{ github.repository }}/aws/aws-rancher-csp-adapter-ecr/credentials secretAccessKey | ECR_SECRET_KEY ;
            secret/data/github/repo/${{ github.repository }}/aws/aws-rancher-csp-adapter-ecr-eu/credentials accessKeyId | ECR_ACCESS_KEY_EU ;
            secret/data/github/repo/${{ github.repository }}/aws/aws-rancher-csp-adapter-ecr-eu/credentials secretAccessKey | ECR_SECRET_KEY_EU ;

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.ECR_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: 709825985650.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Images to Registries
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          file: package/Dockerfile
          platforms: linux/amd64

      - name: Build Manifest for EU Registry Images
        id: metadata_eu
        uses: docker/metadata-action@v5
        with:
          images: |
            709825985650.dkr.ecr.us-east-1.amazonaws.com/suse/rancher/rancher-csp-adapter-eu
          flavor: |
            latest=false

      - name: Configure AWS credentials for EU Registry
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.ECR_ACCESS_KEY_EU }}
          aws-secret-access-key: ${{ env.ECR_SECRET_KEY_EU }}
          aws-region: us-east-1

      - name: Login to ECR for EU Registry
        uses: docker/login-action@v2
        with:
          registry: 709825985650.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Images to EU Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.metadata_eu.outputs.tags }}
          labels: ${{ steps.metadata_eu.outputs.labels }}
          file: package/Dockerfile
          platforms: linux/amd64
